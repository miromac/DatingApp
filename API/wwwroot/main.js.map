{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_directives/has-role.directive.ts","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/_models/pagination.ts","./src/app/_models/userParams.ts","./src/app/_modules/shared.module.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_services/account.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/busy.service.ts","./src/app/_services/confirm.service.ts","./src/app/_services/members.service.ts","./src/app/_services/message.service.ts","./src/app/_services/paginationHelper.ts","./src/app/_services/presence.service.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef, \r\n    private templateRef: TemplateRef<any>, \r\n    private accountService: AccountService) {\r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n        this.user = user;\r\n      })\r\n     }\r\n\r\n     ngOnInit(): void {\r\n      // clear view if no roles\r\n      if (!this.user?.roles || this.user == null) {\r\n        this.viewContainerRef.clear();\r\n        return;\r\n      }\r\n  \r\n      if (this.user?.roles.some(r  => this.appHasRole.includes(r))) {\r\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n      } else {\r\n        this.viewContainerRef.clear();\r\n      }\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css']\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  \r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY'\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n}\r\n","<div class=\"mb-3\">\r\n    <input \r\n        type=\"text\"\r\n        [class.is-invalid]='ngControl.touched && ngControl.invalid'\r\n        class='form-control'\r\n        [formControl]='ngControl.control'\r\n        placeholder=\"{{label}}\"\r\n        bsDatepicker\r\n        [bsConfig]='bsConfig'\r\n        [maxDate]='maxDate'\r\n    >\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"mb-3\">\r\n    <input\r\n        [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n        type={{type}}\r\n        class=\"type form-control\"\r\n        [formControl]=\"ngControl.control\"\r\n        placeholder={{label}}>\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\r\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}\r\n    </div>\r\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\r\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}\r\n    </div>\r\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\r\n        Passwords do not match\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\r\n          return true;\r\n        }\r\n        this.toastr.error('You cannot enter this area');\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor (private accountService: AccountService, private toastr: ToastrService) {}\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user) return true;\n        this.toastr.error('You shall not pass!')\n      })\n    )\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n\r\n  constructor(private confirmService: ConfirmService) {}\r\n\r\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\r\n    if (component.editForm.dirty) {\r\n      return this.confirmService.confirm()\r\n    }\r\n    return true;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError(error => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if(error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if(error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key])\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if (typeof(error.error) === 'object') {\r\n                this.toastr.error(error.statusText, error.status);\r\n              } else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n            case 401:\r\n              this.toastr.error(error.statusText === \"OK\" ? \"Unauthorised\": error.statusText, error.status);\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.log(error);\r\n              break;\r\n          }\r\n        }\r\n\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user)\r\n\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      })\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { identity, Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n\r\n    return next.handle(request).pipe(\r\n      (environment.production ? identity : delay(1000)),\r\n      finalize(() => {\r\n        this.busyService.idle()\r\n      })\r\n    )\r\n  }\r\n}\r\n","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}","import { User } from './user';\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right'\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n    constructor(private memberService: MembersService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username'));\r\n    }\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { PresenceService } from './presence.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private presence: PresenceService) { }\r\n\r\n  login(model: any){\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(model:any) {\r\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\r\n      map((user: User) => {\r\n        if (user) {  \r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsersWithRoles() {\r\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]) {\r\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n  constructor(private spinnerService: NgxSpinnerService) { }\r\n\r\n  busy() {\r\n    this.busyRequestCount++;\r\n    this.spinnerService.show(undefined, {\r\n      type: 'line-scale-party',\r\n      bdColor: 'rgba(255,255,255,0)',\r\n      color: '#333333'\r\n    });\r\n  }\r\n\r\n  idle() {\r\n    this.busyRequestCount--;\r\n    if (this.busyRequestCount <= 0) {\r\n      this.busyRequestCount = 0;\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n  bsModelRef: BsModalRef;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  confirm(title = 'Confirmation', \r\n    message = 'Are you sure you want to do this?', \r\n    btnOkText = 'Ok', \r\n    btnCancelText = 'Cancel'): Observable<boolean> {\r\n      const config = {\r\n        initialState: {\r\n          title, \r\n          message,\r\n          btnOkText,\r\n          btnCancelText\r\n        }\r\n      }\r\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\r\n    \r\n    return new Observable<boolean>(this.getResult());\r\n  }\r\n\r\n  private getResult() {\r\n    return (observer) => {\r\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\r\n        observer.next(this.bsModelRef.content.result);\r\n        observer.complete();\r\n      });\r\n\r\n      return {\r\n        unsubscribe() {\r\n          subscription.unsubscribe();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { User } from '../_models/user';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MembersService {\r\n  \r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n\r\n  constructor(private http: HttpClient, private accountService: AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n      this.user = user;\r\n      this.userParams = new UserParams(user);\r\n    })\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params: UserParams) {\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams() {\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\r\n    if (response) {\r\n      return of(response);\r\n    }\r\n    let params = this.getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\r\n\r\n    params = params.append('minAge', userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return this.getPaginatedResult<Member[]>(this.baseUrl + 'users', params)\r\n      .pipe(map(response => {\r\n        this.memberCache.set(Object.values(userParams).join('-'), response);\r\n        return response;\r\n      }))\r\n  }\r\n\r\n  getMember(username: string) {\r\n    const member = [...this.memberCache.values()]\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])\r\n      .find((member: Member) => member.username === username);\r\n\r\n    if (member) {\r\n      return of(member);\r\n    }\r\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    );\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/' + username, {})\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize) {\r\n    let params = this.getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n    return this.getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params);\r\n  }\r\n\r\n  private getPaginatedResult<T>(url, params) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return this.http.get<T>(url, { observe: 'response', params }).pipe(\r\n      map(response => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  private getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('pageNumber', pageNumber.toString());\r\n    params = params.append('pageSize', pageSize.toString());\r\n\r\n    return params;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { BusyService } from './busy.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) { }\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build()\r\n\r\n    this.hubConnection.start()\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', messages => {\r\n      this.messageThreadSource.next(messages);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessage', message => {\r\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n        this.messageThreadSource.next([...messages, message])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some(x => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n          messages.forEach(message => {\r\n            if (!message.dateRead) {\r\n              message.dateRead = new Date(Date.now())\r\n            }\r\n          })\r\n          this.messageThreadSource.next([...messages]);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n      map(response => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  export function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('pageNumber', pageNumber.toString());\r\n    params = params.append('pageSize', pageSize.toString());\r\n\r\n    return params;\r\n  }","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(private toastr: ToastrService, private router: Router) { }\r\n\r\n  createHubConnection(user: User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence', {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build()\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch(error => console.log(error));\r\n\r\n    this.hubConnection.on('UserIsOnline', username => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\r\n        this.onlineUsersSource.next([...usernames, username])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('UserIsOffline', username => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\r\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\r\n      this.onlineUsersSource.next(usernames);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessageReceived', ({username, knownAs}) => {\r\n      this.toastr.info(knownAs + ' has sent you a new message!')\r\n        .onTap\r\n        .pipe(take(1))\r\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    this.hubConnection.stop().catch(error => console.log(error));\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n    <tabset class=\"member-tabset\">\r\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\r\n            <div class=\"container\">\r\n                <app-user-management></app-user-management>\r\n            </div>\r\n        </tab>\r\n        <tab heading='Photo management' *appHasRole='[\"Admin\", \"Moderator\"]'>\r\n            <div class=\"container\">\r\n                <app-photo-management></app-photo-management>\r\n            </div>\r\n        </tab>\r\n    </tabset>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.css']\r\n})\r\nexport class PhotoManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>photo-management works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: Partial<User[]>;\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    this.adminService.getUsersWithRoles().subscribe(users => {\r\n      this.users = users;\r\n    })\r\n  }\r\n\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user)\r\n      }\r\n    }\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\r\n      const rolesToUpdate = {\r\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\r\n      };\r\n      if (rolesToUpdate) {\r\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\r\n          user.roles = [...rolesToUpdate.roles]\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const availableRoles: any[] = [\r\n      {name: 'Admin', value: 'Admin'},\r\n      {name: 'Moderator', value: 'Moderator'},\r\n      {name: 'Member', value: 'Member'}\r\n    ];\r\n\r\n    availableRoles.forEach(role => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n      if (!isMatch) {\r\n        role.checked = false;\r\n        roles.push(role);\r\n      }\r\n    })\r\n    return roles;\r\n  }\r\n\r\n}","<div class=\"row\">\r\n    <table class=\"table\">\r\n        <tr>\r\n            <th style=\"width: 30%;\">Username</th>\r\n            <th style=\"width: 40%;\">Active roles</th>\r\n            <th style=\"width: 30%;\"></th>\r\n        </tr>\r\n        <tr *ngFor=\"let user of users\">\r\n            <td>{{user.username}}</td>\r\n            <td>{{user.roles}}</td>\r\n            <td><button (click)=\"openRolesModal(user)\" style=\"background-color: darkcyan\" class=\"btn btn-info\">Edit Roles</button></td>\r\n        </tr>\r\n    </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'members', component: MemberListComponent},\r\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\r\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\r\n      {path: 'lists', component: ListsComponent},\r\n      {path: 'messages', component: MessagesComponent},\r\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]}\r\n    ]\r\n  },\r\n  \r\n  {path: 'errors', component: TestErrorsComponent}, \r\n  {path: 'not-found', component: NotFoundComponent}, \r\n  {path: 'server-error', component: ServerErrorComponent}, \r\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from './_models/user';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n//import { AnyNaptrRecord } from 'dns';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'The dating app';\r\n  users: any;\r\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\r\n\r\n\r\n  ngOnInit() {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.accountService.setCurrentUser(user);\r\n      this.presence.createHubConnection(user);\r\n    }\r\n  }\r\n\r\n}\r\n","<ngx-spinner>\r\n    <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n<div class=\"container\" style=\"margin-top: 100px\">\r\n\r\n    <router-outlet></router-outlet>\r\n    \r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not Found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>return to home page</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any; \n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Internal Server Error - refreshing the page makes the error disappear!</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class=\"text-danger\">Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: If you seeing this then Angular is probably not to blame</p>\n    <p>What to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>Check the failing request</li>\n        <li>Examine the request URL - make sure it is correct</li>\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\n    </ol>\n    <p>Following is the stack trace - this is your investigation should start!</p>\n    <code class=\"mt-5\" style=\"background-color:whitesmoke\">\n        {{error.details}}\n    </code>\n</ng-container>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css']\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationErrors: string[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400ValidationError() {\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n\r\n}\r\n","<ng-container>\n    <button (click) = \"get500Error()\" class=\"btn btn-outline-primary me-3\">Test 500 Error</button>\n    <button (click) = \"get400Error()\" class=\"btn btn-outline-primary me-3\">Test 400 Error</button>\n    <button (click) = \"get401Error()\" class=\"btn btn-outline-primary me-3\">Test 401 Error</button>\n    <button (click) = \"get404Error()\" class=\"btn btn-outline-primary me-3\">Test 404 Error</button>\n    <button (click) = \"get400ValidationError()\" class=\"btn btn-outline-primary me-3\">\n        Test 400 Validation Error</button>\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n}\n","<div class=\"container mt-5\">\r\n    <div *ngIf=\"!registerMode\" style=\"text-align: center;\">\r\n        <h1>Find yor match</h1>\r\n        <p class=\"lead\">Come in to view your matches... all you need to do sign up!</p>\r\n        <div class=\"text-center\">\r\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg me-2\">Register</button>\r\n            <button class=\"btn btn-info btn-lg\">Learn more</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"registerMode\" class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-4\">\r\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination;\r\n\r\n  constructor(private memberService: MembersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n  }\r\n  \r\n  loadLikes() {\r\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n    })\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadLikes();\r\n  }\r\n\r\n}","<div class=\"text-center mt-3\">\r\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n    <div class=\"d-flex\">\r\n        <div class=\"btn-group\" name=\"predicate\">\r\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" \r\n                [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members I like</button>\r\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\" \r\n                [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members who like me</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-2\" *ngFor=\"let member of members\">\r\n            <app-member-card [member]=\"member\"></app-member-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n    <pagination \r\n        [boundaryLinks]=\"true\" \r\n        [totalItems]=\"pagination.totalItems\"\r\n        [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\"\r\n        (pageChanged)=\"pageChanged($event)\"\r\n        previousText=\"&lsaquo;\" \r\n        nextText=\"&rsaquo;\" \r\n        firstText=\"&laquo;\" \r\n        lastText=\"&raquo;\">\r\n</pagination>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n\r\n  constructor(private memberService: MembersService, private toastr: ToastrService,\r\n    public presence: PresenceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this.toastr.success('You have liked ' + member.knownAs);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4\">\r\n    <div class=\"card-img-wrapper\">\r\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\r\n        <ul class=\"list-inline member-icons animate text-center\">\r\n            <li class=\"list-inline-item\">\r\n                <button routerLink='/members/{{member.username}}' class=\"btn btn-primary\">\r\n                    <i class=\"fa fa-user\"></i>\r\n                </button></li>\r\n            <li class=\"list-inline-item\">\r\n                <button (click)=\"addLike(member)\" class=\"btn btn-primary\">\r\n                    <i class=\"fa fa-heart\"></i>\r\n                </button></li>\r\n            <li class=\"list-inline-item\">\r\n                <button \r\n                    routerLink='/members/{{member.username}}' \r\n                    [queryParams]='{tab: 3}'\r\n                    class=\"btn btn-primary\">\r\n                    <i class=\"fa fa-envelope\"></i>\r\n                </button></li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-body p-1\">\r\n        <h6 class=\"card-title text-center mb-1\">\r\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n                <i class=\"fa fa-user me-2\"></i>\r\n            </span>\r\n            \r\n            {{member.knownAs}}, {{member.age}}\r\n        </h6>\r\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\r\n    </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab: TabDirective;\r\n  messages: Message[] = [];\r\n  user: User;\r\n\r\n  constructor(public presence: PresenceService, private route: ActivatedRoute, \r\n    private messageService: MessageService, private accountService: AccountService,\r\n    private router: Router) { \r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.member = data.member;\r\n    })\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n    })\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ]\r\n\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url\r\n      })\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMessages() {\r\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\r\n      this.messages = messages;\r\n    })\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective) {\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n                    <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n                </div>\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button class=\"btn btn-primary\">Like</button>\r\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Interests</h4>\r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\r\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" \r\n                    style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\r\n                <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member; \r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotifications($event: any) {\r\n    if(this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService,\r\n              private toastr: ToastrService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember() {\r\n    this.memberService.getMember(this.user.username).subscribe(member => {this.member = member});\r\n  }\r\n\r\n  updateMember() {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully');\r\n      this.editForm.reset(this.member);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n        <h1>Your Profile</h1>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n            <strong>Information: </strong> You have made changes.  Any unsaved changes will be lost\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\"\r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n            <tab heading='About {{member.knownAs}}'>\r\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\r\n                    <h4>Description</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Looking for</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Interests</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Location Details: </h4>\r\n                    <div class=\"d-flex\">\r\n                        <label for=\"city\">City: </label>\r\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\r\n                        <label for=\"city\">Country: </label>\r\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\r\n                    </div>\r\n                </form>\r\n            </tab>\r\n            <tab heading='Edit Photos'>\r\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [{ value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }];\r\n\r\n  constructor(private memberService: MembersService) {\r\n    this.userParams = this.memberService.getUserParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers() {\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.memberService.getMembers(this.userParams).subscribe(respone => {\r\n      this.members = respone.result;\r\n      this.pagination = respone.pagination;\r\n    })\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams = this.memberService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.userParams.pageNumber = event.page;\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>Your matches - {{ pagination?.totalItems }} found</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <form\r\n    #form=\"ngForm\"\r\n    class=\"d-flex mb-3\"\r\n    (ngSubmit)=\"loadMembers()\"\r\n    autocomplete=\"off\"\r\n  >\r\n    <div class=\"d-flex\">\r\n      <label>Age from: </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ms-1\"\r\n        style=\"width: 70px\"\r\n        name=\"minAge\"\r\n        [(ngModel)]=\"userParams.minAge\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"d-flex px-2\">\r\n      <label>Age to: </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ms-1\"\r\n        style=\"width: 70px\"\r\n        name=\"maxAge\"\r\n        [(ngModel)]=\"userParams.maxAge\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"d-flex px-2\">\r\n      <label>Show: </label>\r\n      <select\r\n        name=\"gender\"\r\n        style=\"width: 130px\"\r\n        [(ngModel)]=\"userParams.gender\"\r\n        class=\"form-control ms-1\"\r\n      >\r\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n          {{ gender.display }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <button class=\"btn btn-primary ms-1\" type=\"submit\">Apply Filters</button>\r\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ms-1\" type=\"submit\">\r\n      Reset Filters\r\n    </button>\r\n    <div class=\"col\">\r\n      <div class=\"btn-group float-end\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"lastActive\"\r\n          [(ngModel)]=\"userParams.orderBy\"\r\n        >\r\n          Last Active\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"created\"\r\n          [(ngModel)]=\"userParams.orderBy\"\r\n        >\r\n          Newest Members\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div *ngFor=\"let member of members\" class=\"col-2\">\r\n    <app-member-card [member]=\"member\"></app-member-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div>\r\n","<div class=\"card\">\r\n    <div class=\"card-body\"\r\n        #scrollMe\r\n        style=\"overflow: scroll; height: 535px;\"\r\n        [scrollTop]=\"scrollMe.scrollHeight\"\r\n    >\r\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n\r\n        <ul \r\n            *ngIf=\"(messageService.messageThread$ | async).length > 0\" \r\n            class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n                <div>\r\n                    <span class=\"chat-img float-end\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \r\n                            alt=\"{{message.senderUsername}}\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input \r\n                    name=\"messageContent\"\r\n                    required\r\n                    [(ngModel)]=\"messageContent\"\r\n                    type=\"text\" \r\n                    class=\"form-control input-sm\" \r\n                    placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid || loading\"\r\n                        class=\"btn btn-primary\" type=\"submit\">\r\n                        Send <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent = '';\r\n  loading = false;\r\n\r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.username) return;\r\n    this.loading = true;\r\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\r\n      this.messageForm?.reset();\r\n    }).finally(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropzoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService) { \r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any) {\r\n    this.hasBaseDropzoneOver = e;\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach(p => {\r\n        if (p.isMain) p.isMain = false;\r\n        if (p.id === photo.id) p.isMain = true;\r\n      })\r\n    })\r\n  } \r\n\r\n  deletePhoto(photoId: number) {\r\n    this.memberService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\r\n    })\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    }\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n        this.member.photos.push(photo);\r\n         if (photo.isMain) {\r\n           this.user.photoUrl = photo.url;\r\n           this.member.photoUrl = photo.url;\r\n           this.accountService.setCurrentUser(this.user);\r\n         }\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\r\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\r\n        <div class=\"text-center\">\r\n            <button \r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"setMainPhoto(photo)\"\r\n                [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\r\n                class=\"btn btn-sm\"\r\n            >Main</button>\r\n            <button \r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"deletePhoto(photo.id)\"\r\n                class=\"btn btn-sm btn-danger\"\r\n            ><i class=\"fa fa-trash\"></i></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-3\">\r\n \r\n    <div class=\"col-md-3\">\r\n\r\n        <h3>Add Photos</h3>\r\n\r\n        <div ng2FileDrop\r\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\r\n             (fileOver)=\"fileOverBase($event)\"\r\n             [uploader]=\"uploader\"\r\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n             <i class=\"fa fa-upload fa-3x\"></i>\r\n            Drop photos here\r\n        </div>\r\n\r\n        Multiple\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\r\n\r\n        Single\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n\r\n        <h3>Upload queue</h3>\r\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th width=\"50%\">Name</th>\r\n                <th>Size</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let item of uploader.queue\">\r\n                <td><strong>{{ item?.file?.name }}</strong></td>\r\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div>\r\n            <div>\r\n                Queue progress:\r\n                <div class=\"progress\" style=\"\">\r\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                <span class=\"fa fa-upload\"></span> Upload all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n                <span class=\"fa fa-ban\"></span> Cancel all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n                <span class=\"fa fa-trash\"></span> Remove all\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[] = [];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response => {\r\n      this.messages = response.result;\r\n      this.pagination = response.pagination;\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\r\n      if (result) {\r\n        this.messageService.deleteMessage(id).subscribe(() => {\r\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadMessages();\r\n  }\r\n\r\n}","<div class=\"d-flex mb-4\">\r\n    <div class=\"btn-group\" name='container'>\r\n        <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-envelope\"></i> Unread\r\n        </button>\r\n        <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-envelope-open\"></i> Inbox\r\n        </button>\r\n        <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-paper-plane\"></i> Outbox\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\r\n    <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\r\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n        <tr>\r\n            <th style=\"width: 40%\">Message</th>\r\n            <th style=\"width: 20%\">From / To</th>\r\n            <th style=\"width: 20%\">Sent / Received</th>\r\n            <th style=\"width: 20%\"></th>\r\n        </tr>\r\n        <tr [hidden]=\"loading\" *ngFor=\"let message of messages\" \r\n            routerLink='{{container === \"Outbox\" \r\n                ? \"/members/\" + message.recipientUsername \r\n                : \"/members/\" + message.senderUsername}}' [queryParams]='{tab: 3}' >\r\n            <td>{{message.content}}</td>    \r\n            <td>\r\n                <div *ngIf=\"container === 'Outbox'\">\r\n                    <img \r\n                        class=\"img-circle rounded-circle me-2\"\r\n                        src=\"{{message.recipientPhotoUrl || './assets.user.png'}}\" \r\n                        alt=\"{{message.recipientUsername}}\">\r\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\r\n                </div> \r\n                <div *ngIf=\"container !== 'Outbox'\">\r\n                    <img \r\n                        class=\"img-circle rounded-circle me-2\"\r\n                        src=\"{{message.senderPhotoUrl || './assets.user.png'}}\" \r\n                        alt=\"{{message.senderUsername}}\">\r\n                    <strong>{{message.senderUsername | titlecase}}</strong>\r\n                </div> \r\n            </td>\r\n            <td>{{message.messageSent | timeago}}</td>\r\n            <td>\r\n                <button\r\n                    (click)=\"$event.stopPropagation()\"\r\n                    (click)=\"deleteMessage(message.id)\"\r\n                    class='btn btn-danger'>\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\r\n    <pagination \r\n        [boundaryLinks]=\"true\" \r\n        [totalItems]=\"pagination.totalItems\"\r\n        [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\"\r\n        (pageChanged)=\"pageChanged($event)\"\r\n        previousText=\"&lsaquo;\" \r\n        nextText=\"&rsaquo;\" \r\n        firstText=\"&laquo;\" \r\n        lastText=\"&raquo;\">\r\n</pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  title: string;\r\n  message: string;\r\n  btnOkText: string;\r\n  btnCancelText: string;\r\n  result: boolean;\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm() {\r\n    this.result = true;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n  decline() {\r\n    this.result = false;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>{{message}}</p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\r\n  </div>","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[]; \r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateRoles() {\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n            <input type=\"checkbox\"\r\n                class=\"form-check-input\"\r\n                [checked]=\"role.checked\"\r\n                value=\"role.name\"\r\n                (change)=\"role.checked = !role.checked\"\r\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\r\n            >\r\n            <label>{{role.name}}</label>\r\n        </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\r\n  </div>","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\">Dating App</a>\r\n    <ul class=\"navbar-nav me-auto\">\r\n      <ng-container *ngIf=\"acountService.currentUser$ | async\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\"\r\n            >Matches</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\"\r\n            >Lists</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\"\r\n            >Messages</a\r\n          >\r\n        </li>\r\n        <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\"\r\n            >Admin</a\r\n          >\r\n        </li>\r\n      </ng-container>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\"\r\n          >Errors</a\r\n        >\r\n      </li>\r\n    </ul>\r\n\r\n    <div\r\n      class=\"dropdown\"\r\n      *ngIf=\"acountService.currentUser$ | async as user\"\r\n      dropdown\r\n    >\r\n      <img\r\n        src=\"{{ user.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ user.username }}\"\r\n      />\r\n      <a class=\"dropdown-toggle text-light ms-2 text-decoration-none\" dropdownToggle\r\n        >Welcome {{ user.knownAs || user.username | titlecase }}</a\r\n      >\r\n      <div class=\"dropdown-menu mt-2\" *dropdownMenu>\r\n        <a routerLink=\"/member/edit\" class=\"dropdown-item\">Edit Profile</a>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n      </div>\r\n    </div>\r\n\r\n    <form\r\n      *ngIf=\"(acountService.currentUser$ | async) === null\"\r\n      #loginForm=\"ngForm\"\r\n      class=\"d-flex mt-2 mt-md-0\"\r\n      (ngSubmit)=\"login()\"\r\n      autocomplete=\"off\"\r\n    >\r\n      <input\r\n        name=\"username\"\r\n        [(ngModel)]=\"model.username\"\r\n        class=\"form-control me-sm-2\"\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        [(ngModel)]=\"model.password\"\r\n        class=\"form-control me-sm-2\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  //currentUser$: Observable<User>;\n  //loggedIn: boolean;\n\n  constructor(\n    public acountService: AccountService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    //this.getCurrentUser();\n    //this.currentUser$ = this.acountService.currentUser$;\n  }\n\n  login() {\n    this.acountService.login(this.model).subscribe((response) => {\n      //console.log(response);\n      //this.loggedIn = true;\n      this.router.navigateByUrl('/members');\n    });\n    //console.log(this.model);\n  }\n\n  logout() {\n    this.acountService.logout();\n    this.router.navigateByUrl('/');\n    //this.loggedIn = false;\n  }\n\n  // getCurrentUser() {\n  //   this.acountService.currentUser$.subscribe(user => {\n  //     this.loggedIn = !!user;\n  //   }, error => {\n  //     console.log(error);\n  //   })\n  //}\n  // <ul class=\"navbar-nav me-auto\" *ngIf=\"loggedIn\">\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AbstractControl, UntypedFormBuilder, FormControl, UntypedFormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: UntypedFormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService, \r\n    private fb: UntypedFormBuilder, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.intitializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() -18);\r\n  }\r\n\r\n  intitializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, \r\n        Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\r\n    })\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value \r\n        ? null : {isMatching: true}\r\n    }\r\n  }\r\n\r\n  register() {\r\n    this.accountService.register(this.registerForm.value).subscribe(response => {\r\n      this.router.navigateByUrl('/members');\r\n    }, error => {\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n\r\n}","<form\r\n  [formGroup]=\"registerForm\"\r\n  (ngSubmit)=\"registerForm.valid && register()\"\r\n  autocomplete=\"off\"\r\n>\r\n  <h2 class=\"text-center text-primary\">Sign up</h2>\r\n  <hr />\r\n\r\n  <div class=\"d-flex mb-3\">\r\n    <label class=\"control-label\" style=\"margin-right: 10px\">I am a: </label>\r\n    <label class=\"form-check-label\">\r\n      <input class=\"form-check-input\" type=\"radio\" value=\"male\" formControlName=\"gender\" /> Male\r\n    </label>\r\n    <label class=\"form-check-label\">\r\n      <input\r\n        type=\"radio\"\r\n        value=\"female\"\r\n        formControlName=\"gender\"\r\n        class=\"form-check-input ms-3\"\r\n      />\r\n      Female\r\n    </label>\r\n  </div>\r\n\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['username']\"\r\n    [label]=\"'Username'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['knownAs']\"\r\n    [label]=\"'Known As'\"\r\n  ></app-text-input>\r\n  <app-date-input\r\n    [formControl]=\"registerForm.controls['dateOfBirth']\"\r\n    [label]=\"'Date Of Birth'\"\r\n    [maxDate]=\"maxDate\"\r\n  ></app-date-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['city']\"\r\n    [label]=\"'City'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['country']\"\r\n    [label]=\"'Country'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['password']\"\r\n    [label]=\"'Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['confirmPassword']\"\r\n    [label]=\"'Confirm Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n\r\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\r\n    <ul class=\"text-danger\">\r\n      <li *ngFor=\"let error of validationErrors\">\r\n        {{ error }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"text-center\">\r\n    <button\r\n      [disabled]=\"!registerForm.valid\"\r\n      class=\"btn btn-success mr2\"\r\n      type=\"submit\"\r\n    >\r\n      Register\r\n    </button>\r\n    <button class=\"btn btn-default mr2\" (click)=\"cancel()\" type=\"button\">\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</form>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["HubConnectionBuilder","BehaviorSubject","take","environment","getPaginatedResult","getPaginationHeaders","MessageService","constructor","http","busyService","apiUrl","hubUrl","messageThreadSource","asObservable","createHubConnection","user","otherUsername","busy","hubConnection","withUrl","accessTokenFactory","token","withAutomaticReconnect","build","start","catch","error","console","log","finally","idle","on","messages","next","message","messageThread$","pipe","subscribe","group","connections","some","x","username","forEach","dateRead","Date","now","stopHubConnection","stop","getMessages","pageNumber","pageSize","container","params","append","baseUrl","getMessageThread","get","sendMessage","content","invoke","recipientUsername","deleteMessage","id","delete","i0","factory","providedIn","MemberCardComponent","memberService","toastr","presence","ngOnInit","addLike","member","success","knownAs","selectors","inputs","decls","vars","consts","template","ctx","NgxGalleryAnimation","MemberDetailComponent","route","messageService","accountService","router","currentUser$","routeReuseStrategy","shouldReuseRoute","data","queryParams","tab","selectTab","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","getImages","imageUrls","photo","photos","push","small","url","medium","big","loadMessages","tabId","memberTabs","tabs","active","onTabActivated","activeTab","heading","length","ngOnDestroy","viewQuery","MemberMessagesComponent","loading","messageContent","then","messageForm","reset","NavComponent","acountService","login","model","response","navigateByUrl","logout"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}